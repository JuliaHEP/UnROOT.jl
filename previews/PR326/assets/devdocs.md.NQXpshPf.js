import{_ as e,c as t,o as r,a7 as a}from"./chunks/framework.-tkVdUys.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"devdocs.md","filePath":"devdocs.md","lastUpdated":null}'),o={name:"devdocs.md"},i=a('<h2 id="Related-Projects" tabindex="-1">Related Projects <a class="header-anchor" href="#Related-Projects" aria-label="Permalink to &quot;Related Projects {#Related-Projects}&quot;">â€‹</a></h2><p>While the ROOT documentation does not contain a detailed description of the binary structure, the format can be triangulated by other packages like</p><ul><li><p><a href="https://github.com/scikit-hep/uproot" target="_blank" rel="noreferrer">uproot3</a> (Python), see also <a href="https://github.com/JuliaHEP/UpROOT.jl/" target="_blank" rel="noreferrer">UpROOT.jl</a></p></li><li><p><a href="https://godoc.org/go-hep.org/x/hep/groot#hdr-File_layout" target="_blank" rel="noreferrer">groot</a> (Go)</p></li><li><p><a href="https://github.com/cbourjau/alice-rs/tree/master/root-io" target="_blank" rel="noreferrer">root-io</a> (Rust)</p></li><li><p><a href="https://github.com/spark-root/laurelin" target="_blank" rel="noreferrer">Laurelin</a> (Java)</p></li></ul><p>Here&#39;s a detailed <a href="https://jiling.web.cern.ch/jiling/dump/ROOT_Fileformat.pdf" target="_blank" rel="noreferrer">from-scratch walk through</a> on reading a jagged branch from a ROOT file, recommended for first time contributors or those who just want to learn about ROOT file format.</p><p>Three&#39;s also a <a href="https://github.com/scikit-hep/uproot/issues/401" target="_blank" rel="noreferrer">discussion</a> reagarding the ROOT binary format documentation on uproot&#39;s issue page.</p>',5),s=[i];function l(n,c,d,h,p,u){return r(),t("div",null,s)}const g=e(o,[["render",l]]);export{f as __pageData,g as default};
