module Stubs
using ..UnROOT

const WRITE_TIME = 0x7670F8CD

const file_preamble = [
    0x72, 0x6F, 0x6F, 0x74, 0x00, 0x00, 0xF7, 0x45,
]

const fileheader = UnROOT.FileHeader32(100, 0x00000638, 0x000005F9, 63, 1, 84, 0x04, 0, 0x00000465, 0x00000194, UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])
const dummy_padding1 = [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00,
]

const tkey32_tfile = UnROOT.TKey32(144, 4, 86, WRITE_TIME, 58, 1, 100, 0, "TFile", "test_ntuple_minimal.root", "")
const tfile = UnROOT.TFile_write("test_ntuple_minimal.root", "")
const tdirectory32 = UnROOT.ROOTDirectoryHeader32(5, WRITE_TIME, WRITE_TIME, 121, 84, 100, 0, 0x000003ec)
const dummy_padding2 = [
    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
]


const RBlob1 = UnROOT.RBlob(0x00DC, 0x0004, 0x000000BA, WRITE_TIME, 0x0022, 0x0001, 244, 100, "RBlob", "", "")
const rnt_header = UnROOT.RNTupleHeader(zero(UInt64), "myntuple", "", "ROOT v6.33.01", [
    UnROOT.FieldRecord(zero(UInt32), zero(UInt32), zero(UInt32), zero(UInt16), zero(UInt16), 0, -1, -1, "one_uint", "std::uint32_t", "", ""),
], [UnROOT.ColumnRecord(0x14, 0x20, zero(UInt32), 0x00, 0x00, 0),], UnROOT.AliasRecord[], UnROOT.ExtraTypeInfo[])
    

const RBlob2 = UnROOT.RBlob(0x002e, 0x0004, 0x00000004, WRITE_TIME, 0x0022, 0x0001, 0x01D0, 100, "RBlob", "", "")
const page1 = [
    0xCE, 0xCE, 0xCE, 0xCE,
]

const RBlob3 = UnROOT.RBlob(0x009E, 0x0004, 0x0000007C, WRITE_TIME, 0x0022, 0x0001, 0x01FE, 100, "RBlob", "", "")
const cluster_summary = UnROOT.Write_RNTupleListFrame([UnROOT.ClusterSummary(0, 1)])
const nested_page_locations = 
UnROOT.RNTuplePageTopList([
    UnROOT.RNTuplePageOuterList([
        UnROOT.RNTuplePageInnerList([
            UnROOT.PageDescription(0x00000001, UnROOT.Locator(4, 0x00000000000001f2, )),
        ]),
    ]),
])
const pagelink = UnROOT.PageLink(0x3dec59c009c67e28, cluster_summary.payload, nested_page_locations)

const RBlob4 = UnROOT.RBlob(0x00C2, 0x0004, 0x000000A0, WRITE_TIME, 0x0022, 0x0001, 0x029c, 100, "RBlob", "", "")
const rnt_footer = UnROOT.RNTupleFooter(0, 0x3dec59c009c67e28, UnROOT.RNTupleSchemaExtension([], [], [], []), [], [
    UnROOT.ClusterGroupRecord(0, 1, 1, UnROOT.EnvLink(0x000000000000007c, UnROOT.Locator(124, 0x0000000000000220, ))),
])
const tkey32_anchor = UnROOT.TKey32(134, 4, 70, WRITE_TIME, 64, 1, 866, 100, "ROOT::Experimental::RNTuple", "myntuple", "")
# these 6 bytes are between tkey32_anchor and the actual anchor
const magic_6bytes = [0x40, 0x00, 0x00, 0x42, 0x00, 0x06]

const rnt_anchor = UnROOT.ROOT_3a3a_Experimental_3a3a_RNTuple(0x0000, 0x0002, 0x0000, 0x0000, 0x0000000000000116, 0x00000000000000ba, 0x00000000000000ba, 0x00000000000002be, 0x00000000000000a0, 0x00000000000000a0, 0x0000000040000000, 0xdc495fd01479af1b)
const tkey32_TDirectory = UnROOT.TKey32(121, 4, 68, WRITE_TIME, 53, 1, 0x000003ec, 100, "", "test_ntuple_minimal.root", "")
# 1 key, and it is the RNTuple Anchor
const n_keys = [
    0x00, 0x00, 0x00, 0x01,
]


const tkey32_TStreamerInfo = UnROOT.TKey32(0x00000194, 4, 0x000004f4, WRITE_TIME, 64, 1, 0x00000465, 100, "TList", "StreamerInfo", "Doubly linked list")

const tsreamerinfo_compressed = [
    0x5A, 0x4C, 0x08, 0x4B, 0x01, 0x00, 0xF4, 0x04, 0x00, 0x78, 0x01, 0xBD, 0x92, 0xC1, 0x4E, 0xC2, 
    0x40, 0x10, 0x86, 0x7F, 0x2A, 0x1A, 0x15, 0xE1, 0xAC, 0xE1, 0xE2, 0xD5, 0x57, 0xE8, 0xA9, 0x92, 
    0x60, 0x34, 0x8A, 0x20, 0x6D, 0x30, 0x7A, 0xD0, 0x2C, 0x30, 0x85, 0x22, 0xEC, 0x36, 0xDB, 0x12, 
    0xA9, 0x27, 0x3C, 0xFA, 0x5E, 0xBE, 0x83, 0x89, 0x4F, 0xE1, 0x1B, 0xE8, 0xB4, 0x10, 0x02, 0x89, 
    0x44, 0xB4, 0xC1, 0x49, 0x76, 0xDA, 0xDD, 0x9D, 0x9D, 0x6F, 0xFB, 0xFF, 0xB5, 0x90, 0xFD, 0xC0, 
    0x26, 0x32, 0x98, 0x8B, 0x8C, 0x85, 0xEC, 0xFB, 0x27, 0x87, 0x63, 0x87, 0x9A, 0xC4, 0x80, 0xF4, 
    0x99, 0x74, 0x15, 0x78, 0xF5, 0x15, 0x3B, 0x16, 0x70, 0xC4, 0xE5, 0x93, 0x03, 0x9C, 0x8B, 0xF5, 
    0x6A, 0xD5, 0x31, 0xCD, 0xF2, 0xC8, 0x27, 0xED, 0x0D, 0x48, 0x86, 0xA2, 0x6F, 0x9A, 0xF5, 0x4B, 
    0x67, 0xE8, 0xF7, 0x09, 0xCF, 0x92, 0xCB, 0x81, 0x2D, 0x3E, 0xFA, 0x92, 0x34, 0xAC, 0x36, 0x7B, 
    0xC7, 0x5A, 0x8B, 0x28, 0x6E, 0xF6, 0x88, 0x8D, 0x45, 0x6E, 0x2E, 0xAE, 0xB5, 0x80, 0xE1, 0x02, 
    0xBB, 0x24, 0x02, 0xAF, 0xE5, 0x44, 0x3E, 0xC5, 0x5B, 0xB7, 0x30, 0x38, 0x3B, 0xC8, 0x72, 0x2E, 
    0xCE, 0xAE, 0x01, 0x20, 0xEF, 0x36, 0x48, 0x07, 0x9E, 0x92, 0x65, 0x5F, 0xB5, 0xBA, 0xBC, 0x80, 
    0x3D, 0x1E, 0x46, 0xFC, 0xB2, 0x2C, 0x0A, 0x43, 0x19, 0x78, 0x1D, 0x49, 0xED, 0xC3, 0xA0, 0xAB, 
    0x74, 0x68, 0x01, 0xCD, 0x31, 0xF0, 0xC6, 0xCF, 0x9F, 0x29, 0x15, 0xD1, 0x53, 0x3A, 0x6E, 0xBC, 
    0x5E, 0x8A, 0x27, 0xFF, 0x81, 0x52, 0x13, 0xE1, 0x9F, 0x15, 0xBB, 0x9F, 0x2A, 0x76, 0x0D, 0xC3, 
    0x02, 0xAE, 0x12, 0x5F, 0x0E, 0xE6, 0x7D, 0xC9, 0xB9, 0x36, 0xD1, 0xC3, 0x29, 0x89, 0x36, 0x25, 
    0x7A, 0x15, 0x00, 0x6C, 0xF3, 0x58, 0x1A, 0xF9, 0x99, 0x2B, 0x7D, 0x25, 0x3B, 0x16, 0x20, 0xC6, 
    0x13, 0x53, 0x6E, 0x60, 0xF0, 0xCC, 0xFE, 0xCE, 0xFA, 0xCB, 0x52, 0x14, 0x52, 0x90, 0x06, 0x72, 
    0x37, 0x85, 0x34, 0x12, 0x48, 0x2D, 0x81, 0xEC, 0xCF, 0x7F, 0xC7, 0xAE, 0x7B, 0x41, 0x32, 0x0D, 
    0x61, 0x45, 0xA5, 0x4E, 0x94, 0x0A, 0xD7, 0xAE, 0x54, 0x1A, 0xC8, 0x6A, 0x4A, 0xA5, 0x21, 0xAC, 
    0xA0, 0x54, 0x45, 0x8C, 0xCE, 0x29, 0xB2, 0xBD, 0x27, 0x02, 0xC7, 0x2F, 0xFF, 0x29, 0x7C, 0x01, 
    0xAA, 0xFB, 0xC2, 0x3F, 
]

const tfile_end = [
    0x00, 0x00, 0x00, 0x3F, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0A, 0x76, 0x70, 0xF8, 0xCD, 0x00, 0x35, 
    0x00, 0x01, 0x00, 0x00, 0x05, 0xF9, 0x00, 0x00, 0x00, 0x64, 0x00, 0x18, 0x74, 0x65, 0x73, 0x74, 
    0x5F, 0x6E, 0x74, 0x75, 0x70, 0x6C, 0x65, 0x5F, 0x6D, 0x69, 0x6E, 0x69, 0x6D, 0x61, 0x6C, 0x2E, 
    0x72, 0x6F, 0x6F, 0x74, 0x00, 0x00, 0x01, 0x00, 0x00, 0x06, 0x38, 0x77, 0x35, 0x94, 0x00, 
]
end
